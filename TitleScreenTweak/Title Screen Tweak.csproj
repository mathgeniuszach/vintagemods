<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Version>1.0.0</Version>
    <TargetFramework>net7</TargetFramework>
  </PropertyGroup>

  <PropertyGroup>
    <VintagestoryBin Condition="Exists('/home/$(USER)/ApplicationData/vintagestory/Vintagestory.dll')">/home/$(USER)/ApplicationData/vintagestory</VintagestoryBin>
    <VintagestoryBin Condition="Exists('/home/$(USER)/.local/share/vintagestory/Vintagestory.dll')">~/ApplicationData/vintagestory</VintagestoryBin>
    <VintagestoryBin Condition="Exists('/usr/share/vintagestory/Vintagestory.dll')">/usr/share/vintagestory</VintagestoryBin>
    <VintagestoryBin Condition="Exists('/opt/vintagestory/Vintagestory.dll')">/opt/vintagestory</VintagestoryBin>
    
    <VintagestoryBin Condition="Exists('$(AppData)/Vintagestory/Vintagestory.dll')">$(AppData)/Vintagestory</VintagestoryBin>
    <VintagestoryBin Condition="Exists('C:/Program Files/Vintagestory/Vintagestory.dll')">C:/Program Files/Vintagestory</VintagestoryBin>
    <VintagestoryBin Condition="Exists('C:/Program Files (x86)/Vintagestory/Vintagestory.dll')">C:/Program Files (x86)/Vintagestory</VintagestoryBin>

    <VintagestoryBin Condition="Exists('$(VINTAGE_STORY)/Vintagestory.dll')">$(VINTAGE_STORY)</VintagestoryBin>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="$(VintagestoryBin)/*.dll"><Private>false</Private></Reference>
    <Reference Include="$(VintagestoryBin)/Mods/*.dll"><Private>false</Private></Reference>
    <Reference Include="$(VintagestoryBin)/Lib/*.dll"><Private>false</Private></Reference>
    <Reference Remove="$(VintagestoryBin)/Lib/System*.dll"></Reference>
  </ItemGroup>
  
  <ItemGroup>
    <None Include="*ICENSE" CopyToOutputDirectory="PreserveNewest"/>
    <None Include="resources/**">
        <Link>%(RecursiveDir)%(Filename)%(Extension)</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  
  <Target Name="Package" AfterTargets="AfterBuild">
    <WriteLinesToFile
      File="$(TargetDir)/modinfo.json"
      Lines="$([System.IO.File]::ReadAllText('$(TargetDir)/modinfo.json').Replace('%VERSION%','$(Version)').Replace('%PROJECT%', '$(TargetName)'))"
      Overwrite="true"
    />
    <ZipDirectory DestinationFile="bin/$(TargetName)-$(Version).zip" SourceDirectory="$(TargetDir)" Overwrite="true"/>
  </Target>

</Project>
